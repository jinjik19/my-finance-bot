from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src.db.models import Category, Envelope, Goal, Phase


def get_envelopes_manage_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫", callback_data="list_envelopes"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="add_envelope"),
    )
    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="edit_envelope_menu"),
        InlineKeyboardButton(text="üóÑÔ∏è –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data="archive_envelope_menu"),
    )
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main_manage"))
    return builder.as_markup()


def get_categories_manage_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫", callback_data="list_categories"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="add_category"),
    )
    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="edit_category_menu"),
        InlineKeyboardButton(text="üóÑÔ∏è –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data="archive_category_menu"),
    )
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main_manage"))
    return builder.as_markup()


def get_goals_manage_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–ª—è–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π", callback_data="list_goals"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å", callback_data="add_goal"),
    )
    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="edit_goal_menu"),
        InlineKeyboardButton(text="üóÑÔ∏è –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data="archive_goal_menu"),
    )
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main_manage"))
    return builder.as_markup()


def get_phases_manage_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–∑–∞–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ / –í—ã–±—Ä–∞—Ç—å", callback_data="list_phases"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="add_phase"),
    )
    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="edit_phase_menu"),
        InlineKeyboardButton(text="üóÑÔ∏è –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data="archive_phase_menu"),
    )
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main_manage"))
    return builder.as_markup()


def get_scheduler_manage_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á", callback_data="list_tasks"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É", callback_data="add_task"),
    )
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main_manage"))

    return builder.as_markup()


def get_task_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="add_task_type:reminder"),
        InlineKeyboardButton(text="ü§ñ –ê–≤—Ç–æ-–ø–µ—Ä–µ–≤–æ–¥", callback_data="add_task_type:auto_transfer"),
    )

    return builder.as_markup()


def get_edit_envelope_keyboard(envelope_id: int, is_savings: bool) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–≤–µ—Ä—Ç–µ."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_envelope_name:{envelope_id}"))
    builder.row(
        InlineKeyboardButton(
            text=f"üéØ –°–¥–µ–ª–∞—Ç—å {'–Ω–µ' if is_savings else ''}–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–º",
            callback_data=f"toggle_savings:envelope:{envelope_id}",
        )
    )
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ö –º–µ–Ω—é –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤", callback_data="manage_envelopes"))
    return builder.as_markup()


def get_edit_phase_keyboard(phase_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ñ–∞–∑–µ."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_phase_name:{phase_id}"),
        InlineKeyboardButton(text="–ú–µ—Å—è—á–Ω—É—é —Ü–µ–ª—å", callback_data=f"edit_phase_target:{phase_id}"),
    )
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É —Ñ–∞–∑", callback_data="list_phases"))

    return builder.as_markup()


def get_items_for_action_keyboard(
    items: list[Envelope | Category | Goal | Phase], action: str, entity_type: str
) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è."""
    builder = InlineKeyboardBuilder()

    for item in items:
        builder.row(InlineKeyboardButton(text=item.name, callback_data=f"{action}:{entity_type}:{item.id}"))

    return builder.as_markup()


def get_phases_keyboard(phases: list[Phase], current_phase_id: int | None) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–∫—É—â–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ñ–∞–∑—ã."""
    builder = InlineKeyboardBuilder()

    for phase in phases:
        text = f"‚úÖ {phase.name}" if phase.id == current_phase_id else phase.name
        builder.row(InlineKeyboardButton(text=text, callback_data=f"set_phase:{phase.id}"))

    return builder.as_markup()


category_type_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–î–æ—Ö–æ–¥", callback_data="category_type:income"),
            InlineKeyboardButton(text="–†–∞—Å—Ö–æ–¥", callback_data="category_type:expense"),
        ]
    ]
)
