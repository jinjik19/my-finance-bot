import datetime as dt
from collections import defaultdict
from decimal import Decimal

from src.core.settings import settings
from src.db.repo_holder import RepoHolder

RU_MONTHS = [
    "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å",
    "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"
]


async def prepare_current_month_report(repo: RepoHolder) -> str:
    """–ì–æ—Ç–æ–≤–∏—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü."""
    today = dt.date.today()
    start_of_month = today.replace(day=1)

    user1_id, user2_id = settings.allowed_telegram_ids
    user1 = await repo.user.get_by_telegram_id(user1_id)
    user2 = await repo.user.get_by_telegram_id(user2_id)

    if not user1 or not user2:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."

    user1_trans = await repo.transaction.get_for_period(user1.id, start_of_month, today)
    user2_trans = await repo.transaction.get_for_period(user2.id, start_of_month, today)
    all_transactions = user1_trans + user2_trans

    if not all_transactions:
        return "–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –µ—â–µ –Ω–µ –±—ã–ª–æ –æ–ø–µ—Ä–∞—Ü–∏–π."

    total_income = Decimal(0)
    total_expense = Decimal(0)
    expenses_by_user = defaultdict(Decimal)

    for t in all_transactions:
        category = await repo.category.get_by_id(t.category_id)

        if category.type == "income":
            total_income += t.amount
        else:
            total_expense += t.amount
            expenses_by_user[t.user_id] += t.amount

    savings_transfers = await repo.transfer.get_savings_for_period(start_of_month, today)
    total_savings = sum(t.amount for t in savings_transfers)
    savings_rate = (total_savings / total_income * 100) if total_income > 0 else Decimal(0)

    net_profit = total_income - total_expense
    profit_emoji = "‚úÖ" if net_profit >= 0 else "‚ùóÔ∏è"

    month_name = RU_MONTHS[today.month - 1]
    report_title = f"–û—Ç—á–µ—Ç –∑–∞ {month_name} {today.year}"

    report_lines = [
        f"üìä **{report_title}**\n",
        f"üí∞ –î–æ—Ö–æ–¥—ã: `{total_income:.2f} ‚ÇΩ`",
        f"üìà –†–∞—Å—Ö–æ–¥—ã: `{total_expense:.2f} ‚ÇΩ`",
        f"{profit_emoji} –ò—Ç–æ–≥: `{net_profit:.2f} ‚ÇΩ`\n",
        f"üéØ **–ù–æ—Ä–º–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π: `{savings_rate:.1f}%`**",
        f"   (–æ—Ç–ª–æ–∂–µ–Ω–æ `{total_savings:.2f} ‚ÇΩ` –∏–∑ `{total_income:.2f} ‚ÇΩ`)\n",
        "**–†–∞—Å—Ö–æ–¥—ã –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º:**",
        f" ‚Ä¢ {user1.username or '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1'}: `{expenses_by_user.get(user1.id, 0):.2f} ‚ÇΩ`",
        f" ‚Ä¢ {user2.username or '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2'}: `{expenses_by_user.get(user2.id, 0):.2f} ‚ÇΩ`",
    ]
    return "\n".join(report_lines)
