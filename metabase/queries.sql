-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 1: –†–∞—Å—Ö–æ–¥—ã –ø–æ –ö–∞—Ç–µ–≥–æ—Ä–∏—è–º (–¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã "–ü–∏—Ä–æ–≥")
-- ====================================================================
WITH filtered_transactions AS (
  SELECT *
  FROM transactions
  WHERE {{date_filter}}
)
SELECT
    c.name,
    sum(t.amount) as total
FROM filtered_transactions t
JOIN categories c ON t.category_id = c.id
WHERE c.type = 'expense'
GROUP BY c.name
ORDER BY total DESC;


-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 2: –î–∏–Ω–∞–º–∏–∫–∞ –î–æ—Ö–æ–¥–æ–≤ –∏ –†–∞—Å—Ö–æ–¥–æ–≤ (–¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ "–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π")
-- ====================================================================
WITH all_flows AS (
    -- –ü–æ—Ç–æ–∫: –î–æ—Ö–æ–¥—ã -> –ö–æ–Ω–≤–µ—Ä—Ç—ã (–∏–∑ transactions)
    SELECT
        c.name AS "source",
        e.name AS "target",
        t.amount AS "value"
    FROM transactions t
    JOIN categories c ON t.category_id = c.id
    JOIN envelopes e ON t.envelope_id = e.id
    WHERE c.type = 'income'
    AND t.transaction_date BETWEEN {{start_date}} AND {{end_date}} -- <-- –î–û–ë–ê–í–õ–ï–ù–û: —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ

    UNION ALL

    -- –ü–æ—Ç–æ–∫: –ö–æ–Ω–≤–µ—Ä—Ç—ã -> –†–∞—Å—Ö–æ–¥—ã (–∏–∑ transactions)
    SELECT
        e.name AS "source",
        c.name AS "target",
        t.amount AS "value"
    FROM transactions t
    JOIN categories c ON t.category_id = c.id
    JOIN envelopes e ON t.envelope_id = e.id
    WHERE c.type = 'expense'
    AND t.transaction_date BETWEEN {{start_date}} AND {{end_date}} -- <-- –î–û–ë–ê–í–õ–ï–ù–û: —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ

    UNION ALL

    -- –ü–æ—Ç–æ–∫: –ö–æ–Ω–≤–µ—Ä—Ç -> –ö–æ–Ω–≤–µ—Ä—Ç (–ü–µ—Ä–µ–≤–æ–¥—ã)
    SELECT
        ef.name AS "source",
        et.name AS "target",
        t.amount AS "value"
    FROM transfers t
    JOIN envelopes ef ON t.from_envelope_id = ef.id
    JOIN envelopes et ON t.to_envelope_id = et.id
    AND t.transfer_date BETWEEN {{start_date}} AND {{end_date}} -- <-- –î–û–ë–ê–í–õ–ï–ù–û: —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ
)
SELECT
    "source",
    "target",
    SUM("value") AS "value"
FROM all_flows
GROUP BY "source", "target"
ORDER BY SUM("value") DESC;


-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 3: –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –ì–ª–∞–≤–Ω–æ–π –¶–µ–ª–∏ (–¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ "–ü—Ä–æ–≥—Ä–µ—Å—Å")
-- ====================================================================
SELECT
    sum(t.amount) as current_amount
FROM transfers t
JOIN goals g ON t.to_envelope_id = g.linked_envelope_id
JOIN system_state ss ON g.phase_id = ss.current_phase_id
WHERE g.status = 'active';


-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 4: –ü–æ–¥—É—à–∫–∞ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –º–µ—Å—è—Ü–∞—Ö (–¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ "–ß–∏—Å–ª–æ")
-- ====================================================================
WITH
  monthly_expenses_sums AS (
    SELECT
      date_trunc('month', t.transaction_date) AS month,
      SUM(t.amount) AS monthly_sum
    FROM
      transactions AS t
      JOIN categories AS c ON t.category_id = c.id
    WHERE
      c.type = 'expense'
    GROUP BY
      month
  ),
  avg_monthly_expenses AS (
    SELECT
      AVG(monthly_sum) AS avg_sum
    FROM
      monthly_expenses_sums
  )
SELECT
  e.balance / CASE WHEN avg_monthly_expenses.avg_sum > 0 THEN avg_monthly_expenses.avg_sum ELSE 1 END AS "months_of_safety"
FROM
  envelopes AS e
CROSS JOIN
  avg_monthly_expenses
WHERE
  e.name = 'üõ°Ô∏è –ü–æ–¥—É—à–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏';

-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 5: –î–≤–∏–∂–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ (–¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã "Sankey")
-- ====================================================================
-- –ü–æ—Ç–æ–∫: –î–æ—Ö–æ–¥—ã -> –ö–æ–Ω–≤–µ—Ä—Ç—ã
WITH all_flows AS (
    -- –ü–æ—Ç–æ–∫: –î–æ—Ö–æ–¥—ã -> –ö–æ–Ω–≤–µ—Ä—Ç—ã (–∏–∑ transactions)
    SELECT
        c.name AS "source",
        e.name AS "target",
        t.amount AS "value"
    FROM transactions t
    JOIN categories c ON t.category_id = c.id
    JOIN envelopes e ON t.envelope_id = e.id
    WHERE c.type = 'income'
    AND t.transaction_date BETWEEN {{start_date}} AND {{end_date}} -- <-- –î–û–ë–ê–í–õ–ï–ù–û: —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ

    UNION ALL

    -- –ü–æ—Ç–æ–∫: –ö–æ–Ω–≤–µ—Ä—Ç—ã -> –†–∞—Å—Ö–æ–¥—ã (–∏–∑ transactions)
    SELECT
        e.name AS "source",
        c.name AS "target",
        t.amount AS "value"
    FROM transactions t
    JOIN categories c ON t.category_id = c.id
    JOIN envelopes e ON t.envelope_id = e.id
    WHERE c.type = 'expense'
    AND t.transaction_date BETWEEN {{start_date}} AND {{end_date}} -- <-- –î–û–ë–ê–í–õ–ï–ù–û: —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ

    UNION ALL

    -- –ü–æ—Ç–æ–∫: –ö–æ–Ω–≤–µ—Ä—Ç -> –ö–æ–Ω–≤–µ—Ä—Ç (–ü–µ—Ä–µ–≤–æ–¥—ã)
    SELECT
        ef.name AS "source",
        et.name AS "target",
        t.amount AS "value"
    FROM transfers t
    JOIN envelopes ef ON t.from_envelope_id = ef.id
    JOIN envelopes et ON t.to_envelope_id = et.id
    AND t.transfer_date BETWEEN {{start_date}} AND {{end_date}} -- <-- –î–û–ë–ê–í–õ–ï–ù–û: —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ
)
SELECT
    "source",
    "target",
    SUM("value") AS "value"
FROM all_flows
GROUP BY "source", "target"
ORDER BY SUM("value") DESC;


-- ====================================================================
-- 6. –î–∏–Ω–∞–º–∏–∫–∞ —á–∏—Å—Ç–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞
-- –¢–∏–ø –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: –û–±–ª–∞—Å—Ç—å (—Å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ–º)
-- –ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: –†–æ—Å—Ç —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º.
-- ====================================================================
SELECT
    date_trunc('month', t.transfer_date)::date as month,
    e.name as "–°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç",
    sum(t.amount) as "–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ"
FROM transfers t
JOIN envelopes e ON t.to_envelope_id = e.id
WHERE e.is_savings = TRUE
GROUP BY month, e.name
ORDER BY month;


-- ====================================================================
-- 7. –ì—Ä–∞—Ñ–∏–∫ –≤—ã–≥–æ—Ä–∞–Ω–∏—è —Ü–µ–ª–∏
-- –¢–∏–ø –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: –õ–∏–Ω–∏—è
-- –ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: –ö–∞–∫ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ –≥–ª–∞–≤–Ω–æ–π —Ü–µ–ª–∏.
-- ====================================================================
WITH monthly_contributions AS (
  SELECT
    date_trunc('month', transfer_date)::date AS month,
    sum(amount) AS monthly_sum
  FROM transfers
  WHERE to_envelope_id = (SELECT id FROM envelopes WHERE name = 'üéØ –ì–ª–∞–≤–Ω–∞—è –¶–µ–ª—å')
  GROUP BY month
)
SELECT
  mc.month,
  (SELECT target_amount FROM goals WHERE name = '–ò–ø–æ—Ç–µ–∫–∞') - sum(mc.monthly_sum) OVER (ORDER BY mc.month) as "–û—Å—Ç–∞—Ç–æ–∫ –ø–æ —Ü–µ–ª–∏"
FROM monthly_contributions mc;


-- ====================================================================
-- 8. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞
-- –¢–∏–ø –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: –ß–∏—Å–ª–∞
-- ====================================================================

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
-- –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
WITH current_month_movements AS (
    -- –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–≤–µ—Ä—Ç (income transactions)
    SELECT
        t.envelope_id AS envelope_id,
        t.amount AS movement_amount
    FROM transactions t
    WHERE t.envelope_id = 2
    AND t.transaction_date >= date_trunc('month', NOW())
    AND t.transaction_date < date_trunc('month', NOW()) + INTERVAL '1 month'
    AND t.category_id IN (SELECT id FROM categories WHERE type = 'income')

    UNION ALL

    -- –†–∞—Å—Ö–æ–¥—ã –∏–∑ –∫–æ–Ω–≤–µ—Ä—Ç–∞ (expense transactions)
    SELECT
        t.envelope_id AS envelope_id,
        -t.amount AS movement_amount
    FROM transactions t
    WHERE t.envelope_id = {{income_envelope_id}}
    AND t.transaction_date >= date_trunc('month', NOW())
    AND t.transaction_date < date_trunc('month', NOW()) + INTERVAL '1 month'
    AND t.category_id IN (SELECT id FROM categories WHERE type = 'expense')

    UNION ALL

    -- –ü–µ—Ä–µ–≤–æ–¥—ã –í –∫–æ–Ω–≤–µ—Ä—Ç
    SELECT
        t.to_envelope_id AS envelope_id,
        t.amount AS movement_amount
    FROM transfers t
    WHERE t.to_envelope_id = {{income_envelope_id}}
    AND t.transfer_date >= date_trunc('month', NOW())
    AND t.transfer_date < date_trunc('month', NOW()) + INTERVAL '1 month'

    UNION ALL

    -- –ü–µ—Ä–µ–≤–æ–¥—ã –ò–ó –∫–æ–Ω–≤–µ—Ä—Ç–∞
    SELECT
        t.from_envelope_id AS envelope_id,
        -t.amount AS movement_amount
    FROM transfers t
    WHERE t.from_envelope_id = {{income_envelope_id}}
    AND t.transfer_date >= date_trunc('month', NOW())
    AND t.transfer_date < date_trunc('month', NOW()) + INTERVAL '1 month'
)
SELECT
    e.balance - COALESCE(SUM(mm.movement_amount), 0) AS "–ë–∞–ª–∞–Ω—Å –Ω–∞ –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞"
FROM envelopes e
LEFT JOIN current_month_movements mm ON e.id = mm.envelope_id
WHERE e.id = {{income_envelope_id}}
GROUP BY e.balance, e.id;
