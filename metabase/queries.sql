-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 1: –†–∞—Å—Ö–æ–¥—ã –ø–æ –ö–∞—Ç–µ–≥–æ—Ä–∏—è–º (–¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã "–ü–∏—Ä–æ–≥")
-- ====================================================================
WITH filtered_transactions AS (
  SELECT *
  FROM transactions
  WHERE {{date_filter}}
)
SELECT
    c.name,
    sum(t.amount) as total
FROM filtered_transactions t
JOIN categories c ON t.category_id = c.id
WHERE c.type = 'expense'
GROUP BY c.name
ORDER BY total DESC;


-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 2: –î–∏–Ω–∞–º–∏–∫–∞ –î–æ—Ö–æ–¥–æ–≤ –∏ –†–∞—Å—Ö–æ–¥–æ–≤ (–¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ "–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π")
-- ====================================================================
WITH MonthlyMovements AS (
    -- –î–æ—Ö–æ–¥—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã 'transactions' (–∫–∞—Ç–µ–≥–æ—Ä–∏—è 'income')
    SELECT
        date_trunc('month', tx.transaction_date) AS month_start,
        SUM(tx.amount) AS amount,
        'income' AS type
    FROM
        transactions tx
    JOIN
        categories c ON tx.category_id = c.id
    WHERE
        c.type = 'income'
        AND tx.transaction_date >= {{date_filter}}
    GROUP BY
        month_start

    UNION ALL

    -- –†–∞—Å—Ö–æ–¥—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã 'transactions' (–∫–∞—Ç–µ–≥–æ—Ä–∏—è 'expense')
    SELECT
        date_trunc('month', tx.transaction_date) AS month_start,
        SUM(tx.amount) AS amount,
        'expense' AS type
    FROM
        transactions tx
    JOIN
        categories c ON tx.category_id = c.id
    WHERE
        c.type = 'expense'
        AND tx.transaction_date >= {{date_filter}}
    GROUP BY
        month_start
)
SELECT
    mm.month_start,
    COALESCE(SUM(CASE WHEN mm.type = 'income' THEN mm.amount ELSE 0 END), 0) AS total_income,
    COALESCE(SUM(CASE WHEN mm.type = 'expense' THEN mm.amount ELSE 0 END), 0) AS total_expense
FROM
    MonthlyMovements mm
GROUP BY
    mm.month_start
ORDER BY
    mm.month_start ASC;


-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 3: –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –ì–ª–∞–≤–Ω–æ–π –¶–µ–ª–∏ (–¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ "–ü—Ä–æ–≥—Ä–µ—Å—Å")
-- ====================================================================
SELECT
    sum(t.amount) as current_amount
FROM transfers t
JOIN goals g ON t.to_envelope_id = g.linked_envelope_id
JOIN system_state ss ON g.phase_id = ss.current_phase_id
WHERE g.status = 'active';


-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 4: –ü–æ–¥—É—à–∫–∞ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –º–µ—Å—è—Ü–∞—Ö (–¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ "–ß–∏—Å–ª–æ")
-- ====================================================================
SELECT
  e.balance / (
    SELECT
      avg(monthly_sum)
    FROM
      (
        SELECT
          sum(t.amount) AS monthly_sum
        FROM
          transactions AS t
          JOIN categories AS c ON t.category_id = c.id
        WHERE
          c.type = 'expense'
        GROUP BY
          date_trunc('month', t.transaction_date)
      ) AS monthly_expenses
  ) as months_of_safety
FROM
  envelopes AS e
WHERE
  e.name = 'üõ°Ô∏è –ü–æ–¥—É—à–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏';

-- ====================================================================
-- –í–æ–ø—Ä–æ—Å 5: –î–≤–∏–∂–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ (–¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã "Sankey")
-- ====================================================================
-- –ü–æ—Ç–æ–∫: –î–æ—Ö–æ–¥—ã -> –ö–æ–Ω–≤–µ—Ä—Ç—ã
WITH all_flows AS (
    -- –ü–æ—Ç–æ–∫: –î–æ—Ö–æ–¥—ã -> –ö–æ–Ω–≤–µ—Ä—Ç—ã (–∏–∑ transactions)
    SELECT
        c.name AS "source",
        e.name AS "target",
        t.amount AS "value"
    FROM transactions t
    JOIN categories c ON t.category_id = c.id
    JOIN envelopes e ON t.envelope_id = e.id
    WHERE c.type = 'income'

    UNION ALL

    -- –ü–æ—Ç–æ–∫: –ö–æ–Ω–≤–µ—Ä—Ç—ã -> –†–∞—Å—Ö–æ–¥—ã (–∏–∑ transactions)
    SELECT
        e.name AS "source",
        c.name AS "target",
        t.amount AS "value"
    FROM transactions t
    JOIN categories c ON t.category_id = c.id
    JOIN envelopes e ON t.envelope_id = e.id
    WHERE c.type = 'expense'

    UNION ALL

    -- –ü–æ—Ç–æ–∫: –ö–æ–Ω–≤–µ—Ä—Ç -> –ö–æ–Ω–≤–µ—Ä—Ç (–ü–µ—Ä–µ–≤–æ–¥—ã)
    SELECT
        ef.name AS "source",
        et.name AS "target",
        t.amount AS "value"
    FROM transfers t
    JOIN envelopes ef ON t.from_envelope_id = ef.id
    JOIN envelopes et ON t.to_envelope_id = et.id
)
SELECT
    "source",
    "target",
    SUM("value") AS "value"
FROM all_flows
GROUP BY "source", "target"
ORDER BY SUM("value") DESC;


-- ====================================================================
-- 6. –î–∏–Ω–∞–º–∏–∫–∞ —á–∏—Å—Ç–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞
-- –¢–∏–ø –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: –û–±–ª–∞—Å—Ç—å (—Å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ–º)
-- –ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: –†–æ—Å—Ç —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º.
-- ====================================================================
SELECT
    date_trunc('month', t.transfer_date)::date as month,
    e.name as "–°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç",
    sum(t.amount) as "–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ"
FROM transfers t
JOIN envelopes e ON t.to_envelope_id = e.id
WHERE e.is_savings = TRUE
GROUP BY month, e.name
ORDER BY month;


-- ====================================================================
-- 7. –ì—Ä–∞—Ñ–∏–∫ –≤—ã–≥–æ—Ä–∞–Ω–∏—è —Ü–µ–ª–∏
-- –¢–∏–ø –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: –õ–∏–Ω–∏—è
-- –ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: –ö–∞–∫ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ –≥–ª–∞–≤–Ω–æ–π —Ü–µ–ª–∏.
-- ====================================================================
WITH monthly_contributions AS (
  SELECT
    date_trunc('month', transfer_date)::date AS month,
    sum(amount) AS monthly_sum
  FROM transfers
  WHERE to_envelope_id = (SELECT id FROM envelopes WHERE name = 'üéØ –ì–ª–∞–≤–Ω–∞—è –¶–µ–ª—å')
  GROUP BY month
)
SELECT
  mc.month,
  (SELECT target_amount FROM goals WHERE name = '–ò–ø–æ—Ç–µ–∫–∞') - sum(mc.monthly_sum) OVER (ORDER BY mc.month) as "–û—Å—Ç–∞—Ç–æ–∫ –ø–æ —Ü–µ–ª–∏"
FROM monthly_contributions mc;


-- ====================================================================
-- 8. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞
-- –¢–∏–ø –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: –ß–∏—Å–ª–∞
-- ====================================================================

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
WITH MonthlyMovements AS (
    -- –î–≤–∏–∂–µ–Ω–∏—è –≤ –¥–æ—Ö–æ–¥–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    SELECT
        e_inc.id AS envelope_id,
        sum(CASE WHEN c.type = 'income' THEN t.amount ELSE -t.amount END) as net_movement_this_month
    FROM transactions t
    JOIN envelopes e_inc ON t.envelope_id = e_inc.id
    JOIN categories c ON t.category_id = c.id
    WHERE e_inc.owner_id = {{user_id}} AND e_inc.name LIKE 'üí∞ –î–æ—Ö–æ–¥ %' AND date_trunc('month', t.transaction_date) = date_trunc('month', NOW())
    GROUP BY e_inc.id

    UNION ALL

    -- –ü–µ—Ä–µ–≤–æ–¥—ã –∏–∑/–≤ –¥–æ—Ö–æ–¥–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    SELECT
        e_from.id AS envelope_id,
        sum(CASE WHEN e_from.id = {{user_id_income_envelope_id}} THEN -t.amount ELSE t.amount END) AS net_movement_this_month
    FROM transfers t
    JOIN envelopes e_from ON t.from_envelope_id = e_from.id
    WHERE e_from.owner_id = {{user_id}} AND e_from.name LIKE 'üí∞ –î–æ—Ö–æ–¥ %' AND date_trunc('month', t.transfer_date) = date_trunc('month', NOW())
    GROUP BY e_from.id

    UNION ALL

    SELECT
        e_to.id AS envelope_id,
        sum(CASE WHEN e_to.id = {{user_id_income_envelope_id}} THEN t.amount ELSE -t.amount END) AS net_movement_this_month
    FROM transfers t
    JOIN envelopes e_to ON t.to_envelope_id = e_to.id
    WHERE e_to.owner_id = {{user_id}} AND e_to.name LIKE 'üí∞ –î–æ—Ö–æ–¥ %' AND date_trunc('month', t.transfer_date) = date_trunc('month', NOW())
    GROUP BY e_to.id
)
SELECT
    e.balance - COALESCE(SUM(mm.net_movement_this_month), 0) AS "–ë–∞–ª–∞–Ω—Å –Ω–∞ –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞"
FROM envelopes e
LEFT JOIN MonthlyMovements mm ON e.id = mm.envelope_id
WHERE e.owner_id = {{user_id}} AND e.name LIKE 'üí∞ –î–æ—Ö–æ–¥ %'
GROUP BY e.balance;
