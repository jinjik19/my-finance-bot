services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  metabase:
    image: metabase/metabase:latest
    restart: always
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${POSTGRES_DB}
      MB_DB_PORT: 5432
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  bot:
    build: .
    restart: always
    env_file: .env
    volumes:
      - ./src:/app/src
    depends_on:
      db:
        condition: service_healthy
      metabase:
        condition: service_healthy

  nginx:
    image: nginx:latest
    restart: always
    environment:
      METABASE_DOMAIN: ${METABASE_DOMAIN}
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/nginx/ssl
      - ./nginx/start-nginx.sh:/start-nginx.sh
      - /var/run/docker.sock:/var/run/docker.sock # если нужно
    depends_on:
      metabase:
        condition: service_healthy
    entrypoint: /start-nginx.sh

  certbot:
    image: certbot/certbot
    restart: "on-failure"
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    command: certonly --webroot -w /var/www/certbot --email ${CERTBOT_EMAIL} -d ${METABASE_DOMAIN} --agree-tos --non-interactive
    depends_on:
      nginx:
        condition: service_started

  certbot-renew:
    image: certbot/certbot
    restart: always
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint:
      - /bin/sh
      - -c
      - |
        while true; do
          certbot renew --webroot -w /var/www/certbot --quiet && nginx -s reload || echo "Renewal failed"
          sleep 43200
        done
    depends_on:
      - nginx

volumes:
  postgres_data: